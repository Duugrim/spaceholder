// –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏–∫–æ—à–µ—Ç–æ–≤
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ Foundry –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è

console.log('üîß Testing Ricochet Fix...');

if (!game.spaceholder?.aimingSystem) {
    console.error('‚ùå AimingSystem not found!');
} else {
    console.log('‚úÖ AimingSystem found');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã
    const aimingSystem = game.spaceholder.aimingSystem;
    const hasRicochetMethods = 
        typeof aimingSystem._canRicochet === 'function' &&
        typeof aimingSystem._calculateRicochetDirection === 'function';
    
    console.log(`üéØ Ricochet methods: ${hasRicochetMethods ? '‚úÖ' : '‚ùå'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    const token = canvas.tokens.controlled[0];
    if (token) {
        console.log(`üéÆ Token ready: ${token.name}`);
        console.log('üìã Instructions:');
        console.log('1. Make sure you have walls on the scene');
        console.log('2. Run: game.spaceholder.aimingSystem.startAiming(canvas.tokens.controlled[0])');
        console.log('3. Aim at a wall and click to fire');
        console.log('4. Check console for ricochet logs with offset calculations');
        console.log('5. Ricochets should now work properly without getting stuck');
    } else {
        console.warn('‚ö†Ô∏è Select a token first');
    }
}

console.log('‚úÖ Fix verification complete!');