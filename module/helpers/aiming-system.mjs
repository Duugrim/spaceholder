// Aiming System for SpaceHolder - –æ—Å–Ω–æ–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è —Å –ª—É—á–∞–º–∏
// –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ TokenPointer –∏ TokenRotator —Å–∏—Å—Ç–µ–º–∞–º–∏

import { RayCaster } from './ray-casting.mjs';
import { RayRenderer } from './ray-renderer.mjs';

export class AimingSystem {
  constructor(onAimComplete = null) {
    // –ö–æ–ª–ª–±—ç–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
    this.onAimComplete = onAimComplete;
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
    this.isAiming = false;
    this.aimingToken = null;
    this.currentAimDirection = 0; // –≤ –≥—Ä–∞–¥—É—Å–∞—Ö
    this.currentRay = null;
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è)
    this.config = {
      aimingSensitivity: 1.0, // —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–≤–æ—Ä–æ—Ç–∞ –ø—Ä–∏—Ü–µ–ª–∞
      showAimingReticle: true, // –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –ø—Ä–∏—Ü–µ–ª—å–Ω—É—é —Å–µ—Ç–∫—É
      
      // –ú–µ—Ö–∞–Ω–∏–∫–∞ –ª—É—á–µ–π (—Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä)
      previewRayLength: 500, // –¥–ª–∏–Ω–∞ –ª—É—á–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∏ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–∏
      
      // –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
      previewUpdateRate: 60, // —á–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (FPS)
    };
    
    // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è)
    this.rayCaster = new RayCaster({ aimingSystem: this });
    this.rayRenderer = new RayRenderer(this);
    
    // –ü—Ä–∏–≤—è–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π
    this._boundEvents = {
      onMouseMove: this._onMouseMove.bind(this),
      onKeyDown: this._onKeyDown.bind(this),
      onKeyUp: this._onKeyUp.bind(this),
      onMouseDown: this._onMouseDown.bind(this),
      onContextMenu: this._onContextMenu.bind(this)
    };
    
    // –¢—Ä–æ—Ç—Ç–ª–∏–Ω–≥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    this._lastPreviewUpdate = 0;
    this._previewUpdateInterval = 1000 / this.config.previewUpdateRate; // –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º—Å
  }
  
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
   */
  initialize() {
    console.log('SpaceHolder | AimingSystem: Initializing aiming system');
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    this._registerSettings();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    this.rayCaster.initialize();
    this.rayRenderer.initialize();
  }
  
  /**
   * –ù–∞—á–∞—Ç—å –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
   * @param {Token} token - —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ
   * @param {Object} weapon - –æ—Ä—É–∂–∏–µ –∏–ª–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –¥–ª—è –∞—Ç–∞–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   */
  startAiming(token, weapon = null) {
    if (!token || !token.isOwner) {
      ui.notifications.warn("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–∏–º —Ç–æ–∫–µ–Ω–æ–º");
      return false;
    }
    
    if (this.isAiming) {
      this.stopAiming();
    }
    
    console.log('SpaceHolder | AimingSystem: Starting aiming for token', token.name);
    
    this.isAiming = true;
    this.aimingToken = token;
    this.weapon = weapon;
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç TokenPointer –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 0
    this.currentAimDirection = token.document.getFlag('spaceholder', 'tokenpointerDirection') ?? 0;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º UI –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
    this._showAimingUI();
    
    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
    this._bindEvents();
    
    // –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π –ª—É—á –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    this._updateAimingPreview();
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
    this._notifyAimingStart();
    
    return true;
  }
  
  /**
   * –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ
   */
  stopAiming() {
    if (!this.isAiming) return;
    
    this.isAiming = false;
    this.aimingToken = null;
    this.weapon = null;
    
    // –°–∫—Ä—ã–≤–∞–µ–º UI
    this._hideAimingUI();
    
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–∏–≤—è–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π
    this._unbindEvents();
    
    // –û—á–∏—â–∞–µ–º –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –ª—É—á–∞
    this.rayRenderer.clearRay();
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
    this._notifyAimingEnd();
  }
  
  /**
   * –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ –∏ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
   * @returns {Object|null} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è –∏–ª–∏ null –µ—Å–ª–∏ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ
   */
  aim() {
    if (!this.isAiming || !this.aimingToken) {
      ui.notifications.warn("–ü—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ");
      return null;
    }
    
    const aimResult = {
      token: this.aimingToken,
      source: this.aimingToken.center,
      direction: this.currentAimDirection,
      weapon: this.weapon,
      timestamp: Date.now()
    };
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ
    this.stopAiming();
    
    return aimResult;
  }
  
  /**
   * –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è (–∫–æ—Ä–æ—Ç–∫–∏–π –ª—É—á)
   */
  _updateAimingPreview() {
    if (!this.isAiming || !this.aimingToken) return;
    
    // –¢—Ä–æ—Ç—Ç–ª–∏–Ω–≥ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const now = Date.now();
    if (now - this._lastPreviewUpdate < this._previewUpdateInterval) {
      return;
    }
    this._lastPreviewUpdate = now;
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –ª—É—á –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–ª–ª–∏–∑–∏–π)
    const previewRay = this.rayCaster.createSimpleRay(
      this.aimingToken.center,
      this.currentAimDirection,
      this.config.previewRayLength
    );
    
    this.currentPreviewRay = previewRay;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    this.rayRenderer.updateAimingPreview(previewRay);
  }
  
  
  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å UI –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
   */
  _showAimingUI() {
    // –ò–∑–º–µ–Ω—è–µ–º –∫—É—Ä—Å–æ—Ä
    document.body.style.cursor = 'crosshair';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏—Ü–µ–ª—å–Ω—É—é —Å–µ—Ç–∫—É, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞
    if (this.config.showAimingReticle) {
      this.rayRenderer.showAimingReticle(this.aimingToken);
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å
    this._showAimingInfo();
  }
  
  /**
   * –°–∫—Ä—ã—Ç—å UI –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
   */
  _hideAimingUI() {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—É—Ä—Å–æ—Ä
    document.body.style.cursor = '';
    
    // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏—Ü–µ–ª—å–Ω—É—é —Å–µ—Ç–∫—É
    this.rayRenderer.hideAimingReticle();
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å
    this._hideAimingInfo();
  }
  
  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
   */
  _showAimingInfo() {
    const info = document.createElement('div');
    info.id = 'aiming-info';
    info.className = 'aiming-info-panel';
    info.innerHTML = `
      <div class="aiming-instructions">
        <h3>–†–µ–∂–∏–º –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è</h3>
        <p>üéØ –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–π—Ç–µ –º—ã—à—å –¥–ª—è –Ω–∞–≤–µ–¥–µ–Ω–∏—è</p>
        <p>‚úÖ –õ–ö–ú - –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–∏—Ü–µ–ª</p>
        <p>üö´ –ü–ö–ú –∏–ª–∏ ESC - –æ—Ç–º–µ–Ω–∏—Ç—å</p>
      </div>
    `;
    
    document.body.appendChild(info);
  }
  
  /**
   * –°–∫—Ä—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –ø–∞–Ω–µ–ª—å
   */
  _hideAimingInfo() {
    const info = document.getElementById('aiming-info');
    if (info) info.remove();
  }
  
  /**
   * –ü—Ä–∏–≤—è–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è
   */
  _bindEvents() {
    canvas.stage.on('mousemove', this._boundEvents.onMouseMove);
    document.addEventListener('keydown', this._boundEvents.onKeyDown);
    document.addEventListener('keyup', this._boundEvents.onKeyUp);
    canvas.stage.on('mousedown', this._boundEvents.onMouseDown);
    document.addEventListener('contextmenu', this._boundEvents.onContextMenu);
  }
  
  /**
   * –£–±—Ä–∞—Ç—å –ø—Ä–∏–≤—è–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π
   */
  _unbindEvents() {
    canvas.stage.off('mousemove', this._boundEvents.onMouseMove);
    document.removeEventListener('keydown', this._boundEvents.onKeyDown);
    document.removeEventListener('keyup', this._boundEvents.onKeyUp);
    canvas.stage.off('mousedown', this._boundEvents.onMouseDown);
    document.removeEventListener('contextmenu', this._boundEvents.onContextMenu);
  }
  
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏
   */
  _onMouseMove(event) {
    if (!this.isAiming || !this.aimingToken) return;
    
    const mousePos = canvas.mousePosition;
    const tokenCenter = this.aimingToken.center;
    
    // –í—ã—á–∏—Å–ª—è–µ–º —É–≥–æ–ª –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ —Ç–æ–∫–µ–Ω–∞ –¥–æ –∫—É—Ä—Å–æ—Ä–∞ –º—ã—à–∏
    const dx = mousePos.x - tokenCenter.x;
    const dy = mousePos.y - tokenCenter.y;
    
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –≥—Ä–∞–¥—É—Å—ã (0¬∞ = –≤–ø—Ä–∞–≤–æ, 90¬∞ = –≤–Ω–∏–∑)
    // –£–±—Ä–∞–ª–∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å - –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–µ–º—Å—è –ø—Ä—è–º–æ –≤ –∫—É—Ä—Å–æ—Ä
    const angle = Math.atan2(dy, dx) * (180 / Math.PI);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
    this.currentAimDirection = angle;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä (—Ç–æ–ª—å–∫–æ –∫–æ—Ä–æ—Ç–∫–∏–π –ª—É—á)
    this._updateAimingPreview();
  }
  
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à
   */
  _onKeyDown(event) {
    if (!this.isAiming) return;
    
    switch (event.code) {
      case 'Escape':
        event.preventDefault();
        this.stopAiming();
        break;
    }
  }
  
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –∫–ª–∞–≤–∏—à
   */
  _onKeyUp(event) {
    // –ü–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –¥–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤
  }
  
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –º—ã—à–∏
   */
  _onMouseDown(event) {
    if (!this.isAiming) return;
    
    if (event.button === 0) { // –õ–ö–ú
      event.preventDefault();
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –∫–æ–ª–ª–±—ç–∫
      const aimResult = this.aim();
      if (aimResult && this.onAimComplete) {
        this.onAimComplete(aimResult);
      }
    }
  }
  
  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∞–≤–æ–≥–æ –∫–ª–∏–∫–∞ (–æ—Ç–º–µ–Ω–∞)
   */
  _onContextMenu(event) {
    if (!this.isAiming) return;
    
    event.preventDefault();
    this.stopAiming();
  }
  
  
  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
   */
  _notifyAimingStart() {
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–∫–µ—Ç-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–∞
  }
  
  /**
   * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
   */
  _notifyAimingEnd() {
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–∫–µ—Ç-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–∞
  }
  
  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
   */
  _registerSettings() {
    const MODULE_NS = 'spaceholder';
    const PREF = 'aimingsystem';
    
    game.settings.register(MODULE_NS, `${PREF}.showAimingReticle`, {
      name: '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–∏—Ü–µ–ª—å–Ω—É—é —Å–µ—Ç–∫—É',
      hint: '–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –≤–∏–∑—É–∞–ª—å–Ω—É—é –ø—Ä–∏—Ü–µ–ª—å–Ω—É—é —Å–µ—Ç–∫—É –≤–æ –≤—Ä–µ–º—è –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è',
      scope: 'client',
      config: false,
      default: true,
      type: Boolean,
    });
    
    game.settings.register(MODULE_NS, `${PREF}.aimingSensitivity`, {
      name: '–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è',
      hint: '–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–≤–æ—Ä–æ—Ç–∞ –ø—Ä–∏—Ü–µ–ª–∞',
      scope: 'client',
      config: false,
      default: 1.0,
      type: Number,
    });
    
    game.settings.register(MODULE_NS, `${PREF}.previewRayLength`, {
      name: '–î–ª–∏–Ω–∞ –ª—É—á–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞',
      hint: '–î–ª–∏–Ω–∞ –∑–µ–ª–µ–Ω–æ–≥–æ –ª—É—á–∞ –ø—Ä–∏ –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–∏ (–ø–∏–∫—Å–µ–ª–∏)',
      scope: 'world',
      config: false,
      default: 500,
      type: Number
    });
    
    game.settings.register(MODULE_NS, `${PREF}.previewUpdateRate`, {
      name: '–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞',
      hint: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ª—É—á–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤ —Å–µ–∫—É–Ω–¥—É (FPS)',
      scope: 'client',
      config: false,
      default: 60,
      type: Number,
      choices: {
        30: '30 FPS (—ç–∫–æ–Ω–æ–º–∏—è —ç–Ω–µ—Ä–≥–∏–∏)',
        60: '60 FPS (—Å—Ç–∞–Ω–¥–∞—Ä—Ç)',
        120: '120 FPS (–≤—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å)'
      }
    });
  }
  
  /**
   * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É
   */
  getSetting(key) {
    return game.settings.get('spaceholder', `aimingsystem.${key}`);
  }
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
export function registerAimingSystemSettings() {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ AimingSystem
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ö—É–∫–æ–≤ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è
export function installAimingSystemHooks() {
  // –•—É–∫ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π –∞—Ç–∞–∫
  Hooks.on('preItemRoll', (item, rollConfig) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–æ—Ç–∏–º –ª–∏ –º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
    if (item.type === 'item' && item.actor?.getActiveTokens()?.[0]) {
      const token = item.actor.getActiveTokens()[0];
      const aimingSystem = game.spaceholder?.aimingSystem;
      
      if (aimingSystem && game.keyboard.isModifierActive('alt')) {
        // Alt + –∫–ª–∏–∫ = –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–π –∞—Ç–∞–∫–∏
        aimingSystem.startAiming(token, item);
        return false; // –û—Ç–º–µ–Ω—è–µ–º –æ–±—ã—á–Ω—ã–π —Ä–æ–ª–ª
      }
    }
  });
  
  // –•—É–∫ –Ω–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Ö–æ–ª—Å—Ç–∞
  Hooks.on('canvasReady', () => {
    const aimingSystem = game.spaceholder?.aimingSystem;
    if (aimingSystem) {
      aimingSystem.rayRenderer.onCanvasReady();
    }
  });
}